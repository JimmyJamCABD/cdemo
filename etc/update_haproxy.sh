#!/bin/bash -e
set -o pipefail

# This script updates the HAProxy configuration for currently running Conjur containers
# and restarts the proxy daemon

destination_file="haproxy.cfg"

# takes one argument: the name of the HAProxy container to update
main() {
	haproxy_cname=$1
	echo "# This file is generated by $0 in $(pwd)." > $destination_file
	cat haproxy.cfg.template >> $destination_file
	update_http_servers
	update_pg_servers
	update_ldap_servers

	docker cp haproxy.cfg $haproxy_cname:/usr/local/etc/haproxy/haproxy.cfg
	docker-compose exec haproxy /start.sh
}

			# Appends Conjur HTTP server info in HAProxy format to haproxy.cfg.
update_http_servers() {
	cat <<CONFIG >> $destination_file

# HTTP backend info 
# Generated by $0 in $(pwd)
backend b_conjur_master_http
	mode tcp
	balance roundrobin
	default-server inter 5s fall 3 rise 2
	option httpchk GET /health
	http-check expect status 200
CONFIG

	cont_list=$(docker ps -f "label=role=conjur_node" --format {{.Names}})
	for cont_name in $cont_list; do
		cont_ip=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $cont_name)
		echo -e '\t' server $cont_name $cont_name:443 check port 443 check-ssl verify none >> $destination_file
	done
}

			# Appends Conjur PostgreSQL server info in HAProxy format to haproxy.cfg.
update_pg_servers() {
	cat <<CONFIG >> $destination_file

# PG backend info
# Generated by $0 in $(pwd)
backend b_conjur_master_pg
	mode tcp
	balance roundrobin
        default-server inter 5s fall 3 rise 2
	option httpchk GET /health
	http-check expect status 200
CONFIG

	cont_list=$(docker ps -f "label=role=conjur_node" --format {{.Names}})
	for cont_name in $cont_list; do
       		cont_ip=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $cont_name)
		echo -e '\t' server $cont_name $cont_name:5432 check port 443 check-ssl verify none >> $destination_file
	done
}

			# Appends Conjur LDAP server info in HAProxy format to haproxy.cfg.
update_ldap_servers() {
	cat <<CONFIG >> $destination_file

# LDAP backend info 
# Generated by $0 in $(pwd)
backend b_conjur_master_ldap
	mode tcp
	balance roundrobin
        default-server inter 5s fall 3 rise 2
        option ldap-check
CONFIG

	cont_list=$(docker ps -f "label=role=conjur_node" --format {{.Names}})
	for cont_name in $cont_list; do
		cont_ip=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $cont_name)
		echo -e '\t' server $cont_name $cont_name:636 check check-ssl verify none >> $destination_file
	done
}

main $@

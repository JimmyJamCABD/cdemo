---
- hosts: localhost
  tasks:
    - name: Remove old version of docker
      yum:
        name: docker
        state: absent
        
    - name: Install docker dependencies
      yum:
        name: "{{ item }}"
        update_cache: yes
        state: latest
      with_items:
        - curl
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - git
        - make
        
    - name: install docker repo
      shell: |
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
        
    - name: Install Docker-CE
      yum:
        name: docker-ce
        update_cache: yes
        state: present

    - name: Start and enable docker service
      service:
        name: docker
        state: started
        enabled: yes
        
    - name: download and install pip
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: /opt/
    
    - name: install pip
      shell: |
        python /opt/get-pip.py
        pip install docker-py

    - name: download weavescope
      get_url:
        url: git.io/scope
        dest: /usr/local/bin/scope
        mode: 0755
        
    - name: launch weavescope
      shell: |
        /usr/local/bin/scope launch
      ignore_errors: yes        
 
    - name: create conjur docker network
      docker_network:
        name: conjur
        
    - name: create conjur docker volume
      docker_volume:
        name: conjur
    
    - name: Load Conjur tar
      docker_image:
        name: registry2.itci.conjur.net/conjur-appliance:5.0-stable
        load_path: /opt/conjur.tar
        state: present
    
    - name: Start conjur container
      docker_container:
         name: conjur-master
         image: registry2.itci.conjur.net/conjur-appliance:5.0-stable
         state: started
         privileged: yes
         recreate: yes
         networks:
          - name: conjur
         published_ports:
          - "443:443"
         volumes:
          - "conjur:/opt/conjur/etc/ssl"
         restart_policy: always

    - name: configure conjur container
      shell: |
        docker exec conjur-master evoke configure master -h conjur-master -p Cyberark1 cyberark

    - name: Start Conjur CLI
      docker_container:
        name: conjur-cli
        image: cyberark/conjur-cli:5-6.1.0
        state: started
        volumes:
         - "conjur:/pem"
         - "./cli:/root"
        restart_policy: always
        recreate: yes
        command: sleep infinity
    
    - name: load configuration file
      blockinfile:
        path: ./cli/.conjurrc
        create: yes
        state: present
        block: |
          ---
          account: cyberark
          plugins: []
          appliance_url: https://conjur-master/
          cert_file: "/pem/ca.pem"
         
    - name: Start Jenkins  
      docker_container:
        name: jenkins
        image: captainfluffytoes/demo_conjur_docker_jenkins
        state: started
        env:
          JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
        published_ports: 
         - "8080:8080" 
        networks:
         - name: conjur
        volumes:
         - "/var/run/docker.sock:/var/run/docker.sock"
         - "./scripts:/scripts"
         - "conjur:/pem"
        restart_policy: always
        
    - name: install jenkins plugins
      shell: |
        docker exec jenkins sh -c 'xargs /usr/local/bin/install-plugins.sh < /scripts/plugins.txt' || true
        docker container restart jenkins
        
    - name: start gitlab
      docker_container:
        name: gitlab
        image: gitlab/gitlab-ce:latest
        state: started
        restart_policy: always
        recreate: yes
        networks:
         - name: conjur
        # published_ports:
         # - "80:80"
         # - "22:22"
         # - "443:443"
        volumes:
         - "/srv/gitlab/config:/etc/gitlab"
         - "/srv/gitlab/logs:/var/log/gitlab"
         - "/srv/gitlab/data:/var/opt/gitlab"
         